{"ast":null,"code":"var _jsxFileName = \"/Users/hjha/euros_dashboard/euros-dashboard-frontend/src/stopwatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import \"./stopwatch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = () => {\n  _s();\n  // state to store time\n  const [time, setTime] = useState(145780);\n\n  // state to check stopwatch running or not\n  const [isRunning, setIsRunning] = useState(true);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time + 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n\n  // Hours calculation\n  const hours = Math.floor(time / 360000);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Milliseconds calculation\n  const milliseconds = time % 100;\n\n  // Method to start and stop timer\n  const startAndStop = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Method to reset timer back to 0\n  const reset = () => {\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"stopwatch-time\",\n      children: [minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"TF3WsuRhR5jc2uTEPWy6Vz1kRDo=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Stopwatch","_s","time","setTime","isRunning","setIsRunning","intervalId","setInterval","clearInterval","hours","Math","floor","minutes","seconds","milliseconds","startAndStop","reset","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hjha/euros_dashboard/euros-dashboard-frontend/src/stopwatch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import \"./stopwatch.css\";\nconst Stopwatch = () => {\n  // state to store time\n  const [time, setTime] = useState(145780);\n\n  // state to check stopwatch running or not\n  const [isRunning, setIsRunning] = useState(true);\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time + 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n\n  // Hours calculation\n  const hours = Math.floor(time / 360000);\n\n  // Minutes calculation\n  const minutes = Math.floor((time % 360000) / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor((time % 6000) / 100);\n\n  // Milliseconds calculation\n  const milliseconds = time % 100;\n\n  // Method to start and stop timer\n  const startAndStop = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Method to reset timer back to 0\n  const reset = () => {\n    setTime(0);\n  };\n  return (\n    <div className=\"stopwatch-container\">\n      <p className=\"stopwatch-time\">\n        {minutes.toString().padStart(2, \"0\")}:\n        {seconds.toString().padStart(2, \"0\")}\n      </p>\n      {/* <div className=\"stopwatch-buttons\">\n        <button className=\"stopwatch-button\" onClick={startAndStop}>\n          {isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button className=\"stopwatch-button\" onClick={reset}>\n          Reset\n        </button>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Stopwatch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;;EAExC;EACA,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU;IACd,IAAIF,SAAS,EAAE;MACb;MACAE,UAAU,GAAGC,WAAW,CAAC,MAAMJ,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IACvD;IACA,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,SAAS,EAAEF,IAAI,CAAC,CAAC;;EAErB;EACA,MAAMO,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACT,IAAI,GAAG,MAAM,CAAC;;EAEvC;EACA,MAAMU,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAET,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;;EAElD;EACA,MAAMW,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAET,IAAI,GAAG,IAAI,GAAI,GAAG,CAAC;;EAE/C;EACA,MAAMY,YAAY,GAAGZ,IAAI,GAAG,GAAG;;EAE/B;EACA,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBV,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMY,KAAK,GAAGA,CAAA,KAAM;IAClBb,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EACD,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCnB,OAAA;MAAGkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC1BN,OAAO,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,GACrC,EAACP,OAAO,CAACM,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASD,CAAC;AAEV,CAAC;AAACvB,EAAA,CArDID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}